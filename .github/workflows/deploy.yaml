name: Deploy to ECR

on:
 
  push:
    branches: [ main ]

env:
  ECR_REPOSITORY: flask-app
  EKS_CLUSTER_NAME: eks-cluster 
  AWS_REGION: ap-northeast-3

jobs:
  
  build:
    
    name: Deployment
    runs-on: self-hosted

    steps:

    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v2

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION}}

    - name: Build Docker Image
      run: docker build --build-arg ENV=prod -t local-image:latest -f docker/Dockerfile .

    - name: scan image with trivy
      uses: aquasecurity/trivy-action@0.24.0
      with: 
        image-ref: local-image:latest
        format: "table"
        severity: "CRITICAL,HIGH"
        output: trivy-result.txt

    - name: Check Trivy result file
      run: cat trivy-result.txt

    - name: Format Trivy Scan Result
      run: |
        if [ -s trivy-result.txt ]; then
          echo -e "## Vulnerability Scan Results\n<details><summary>Details</summary>\n\n\`\`\`\n$(cat trivy-result.txt)\n\`\`\`\n</details>" > formatted-trivy-result.md
        else
          echo -e "## Vulnerability Scan Results\nNo vulnerabilities were detected." > formatted-trivy-result.md
        fi

    - name: Comment PR with Trivy scan results
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        path: formatted-trivy-result.md

    - name: Clean up Trivy result file
      run: rm -f trivy-result.txt formatted-trivy-result.md
                                                                      fi
